{"version":3,"file":"static/js/875.58bd6937.chunk.js","mappings":"iMA0BA,UAtBA,WAEE,OAA4CA,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAgBC,KAAKH,KACpB,KAGD,wBACGD,GACCA,EAAeK,KAAI,SAAAC,GACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAA1B,SAAiCF,EAAMG,kBADhCH,EAAME,W,yMChBrBE,EAAU,mCAIT,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,+GAGoBQ,GAAAA,CAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASH,EACTI,KAAM,KANP,uBAGKC,EAHL,EAGKA,KAHL,kBAUIA,EAAKC,SAVT,gCAYHC,QAAQC,IAAR,MAZG,gFAgBC,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,kGAEmBT,GAAAA,CAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASH,EACTW,MAAM,GAAD,OAAKD,MALV,uBAEIL,EAFJ,EAEIA,KAFJ,kBAQGA,EAAKC,SARR,gCAUJC,QAAQC,IAAR,MAVI,gFAcD,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAGoBZ,GAAAA,CAAM,SAAD,OAAUY,GAAW,CAE/CX,OAAQ,CACNC,QAASH,KANV,uBAGKK,EAHL,EAGKA,KAHL,kBAUIA,GAVJ,gCAYHE,QAAQC,IAAR,MAZG,gFAiBA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,kGAEoBZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,YAA6B,CAErDX,OAAQ,CACNC,QAASH,KALZ,uBAEKK,EAFL,EAEKA,KAFL,kBASMA,GATN,gCAWDE,QAAQC,IAAR,MAXC,gFAeA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,kGAEwBZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,YAA6B,CAErDX,OAAQ,CACNC,QAASH,KALhB,uBAESK,EAFT,EAESA,KAFT,kBASUA,GATV,gCAWGE,QAAQC,IAAR,MAXH,gFAjEPP,IAAAA,SAAAA,QAAyB","sources":["components/Navigation/Trending/Trending.jsx","components/ServiceApi/ServiceApi.jsx"],"sourcesContent":["import { fetchTrending } from 'components/ServiceApi/ServiceApi';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Trending() {\n  //   const currentLocation = window.location.href;\n  const [trendingMovies, setTrendingMovies] = useState(null);\n\n  useEffect(() => {\n    fetchTrending().then(setTrendingMovies);\n  }, []);\n\n  return (\n    <ul>\n      {trendingMovies &&\n        trendingMovies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`movies/${movie.id}`}>{movie.original_title}</Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default Trending;\n","import axios from 'axios';\nconst API_KEY = '7a92417a5af1e8667d171d8c5ef3af4e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport async function fetchTrending() {\n  try {\n\n    const { data } = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n export async function fetchMoviesByKeyword(searchQuery) {\n  try {\n    const { data } = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: `${searchQuery}`,\n      },\n    });\n    return data.results; //returns an OBJECT. e.g.{page: 1, results: Array(20), total_pages: 8, total_results: 147}\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  //will throw an error if title \"undefined\";\n  try {\n    const { data } = await axios(`movie/${movieId}`, {\n      //for this to work make sure this.searchQuery type is number!!!\n      params: {\n        api_key: API_KEY,\n      \n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport async function fetchReviews(movieId){\n    try{\n    const { data } = await axios(`movie/${movieId}/reviews`, {\n        //for this to work make sure this.searchQuery type is number!!!\n        params: {\n          api_key: API_KEY,\n        \n        },\n      });\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n}\n\nexport async function fetchCast(movieId){\n    try{\n        const { data } = await axios(`movie/${movieId}/credits`, {\n            //for this to work make sure this.searchQuery type is number!!!\n            params: {\n              api_key: API_KEY,\n            \n            },\n          });\n          return data;\n        } catch (error) {\n          console.log(error);\n        }\n}\n\n"],"names":["useState","trendingMovies","setTrendingMovies","useEffect","fetchTrending","then","map","movie","to","id","original_title","API_KEY","axios","params","api_key","page","data","results","console","log","fetchMoviesByKeyword","searchQuery","query","fetchMovieById","movieId","fetchReviews","fetchCast"],"sourceRoot":""}