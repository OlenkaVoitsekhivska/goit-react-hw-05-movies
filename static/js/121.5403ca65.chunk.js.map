{"version":3,"file":"static/js/121.5403ca65.chunk.js","mappings":"wOACA,GAAgB,UAAY,oCAAoC,cAAgB,wCAAwC,eAAiB,yCAAyC,QAAU,mC,mBCStLA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,iCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,gCAEZ,SAASE,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeR,GAASS,KAAKL,KAC5B,CAACJ,IAMJ,OACE,iBAAKU,UAAWC,EAAAA,SAAhB,WACE,mBAAQC,KAAK,SAASC,GAAIF,EAAAA,QAAWG,QANjB,WACtBT,GAAU,IAKR,qBAGCF,IACC,iCACE,iBAAKO,UAAWC,EAAAA,UAAhB,WACE,gBACEI,IACEZ,EAAUa,cAAV,6CAC0Cb,EAAUa,eAChD,uGAENC,IAAI,GACJC,MAAO,OAET,iBAAKR,UAAWC,EAAAA,cAAhB,WACE,0BACGR,EAAUgB,eADb,IAC8BhB,EAAUiB,aAAaC,MAAM,EAAG,GAD9D,QAGA,uCAAwC,GAAzBlB,EAAUmB,aAAzB,QACA,sCACA,uBAAInB,EAAUoB,YACd,oCACA,uBAAIpB,EAAUqB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,eAIvD,iBAAKlB,UAAWC,EAAAA,eAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASkB,GAAG,OAAZ,qBAGF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,8BAIN,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACtC,EAAD,OAC5B,SAAC,KAAD,CAAOqC,KAAK,UAAUC,SAAS,SAACpC,EAAD,mB,yMCpEvCqC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,GAAAA,CAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,KALP,uBAEKC,EAFL,EAEKA,KAFL,kBAQIA,EAAKC,SART,gCAUHC,QAAQC,IAAR,MAVG,gFAcA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,kGAEoBT,GAAAA,CAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTY,MAAM,GAAD,OAAKD,MALX,uBAEKL,EAFL,EAEKA,KAFL,kBAQIA,EAAKC,SART,gCAUHC,QAAQC,IAAR,MAVG,gFAcA,SAAepC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BR,GAA9B,kGAGoBqC,GAAAA,CAAM,SAAD,OAAUrC,GAAW,CAE/CsC,OAAQ,CACNC,QAASJ,KANV,uBAGKM,EAHL,EAGKA,KAHL,kBASIA,GATJ,gCAWHE,QAAQC,IAAR,MAXG,gFAeA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BhD,GAA5B,kGAEoBqC,GAAAA,CAAM,SAAD,OAAUrC,EAAV,YAA6B,CAEvDsC,OAAQ,CACNC,QAASJ,KALV,uBAEKM,EAFL,EAEKA,KAFL,kBAQIA,GARJ,gCAUHE,QAAQC,IAAR,MAVG,gFAcA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBjD,GAAzB,kGAEoBqC,GAAAA,CAAM,SAAD,OAAUrC,EAAV,YAA6B,CAEvDsC,OAAQ,CACNC,QAASJ,KALV,uBAEKM,EAFL,EAEKA,KAFL,kBAQIA,GARJ,gCAUHE,QAAQC,IAAR,MAVG,gFA3DPP,IAAAA,SAAAA,QAAyB","sources":["webpack://react-homework-template/./src/components/MovieDetailsView/MovieDetailsView.module.css?d59c","components/MovieDetailsView/MovieDetailsView.jsx","components/ServiceApi/ServiceApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviePage\":\"MovieDetailsView_moviePage__nIBPn\",\"movieInfoWrap\":\"MovieDetailsView_movieInfoWrap__AF4lS\",\"additionalInfo\":\"MovieDetailsView_additionalInfo__JVYcA\",\"backBtn\":\"MovieDetailsView_backBtn__jREmk\"};","import { NavLink } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Routes, Route, useParams, useNavigate } from 'react-router-dom';\nimport { fetchMovieById } from 'components/ServiceApi/ServiceApi';\nimport s from './MovieDetailsView.module.css';\n// import Cast from \"components/Cast/Cast\";\n// import Reviews from \"components/Reviews/Reviews\";\nimport { lazy, Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = lazy(() => import('components/Cast/Cast.jsx'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews.jsx'));\n\nexport default function MovieDetailsView() {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(setMovieData);\n  }, [movieId]);\n\n  const handleBackClick = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className={s.pageView}>\n      <button type=\"button\" id={s.backBtn} onClick={handleBackClick}>\n        go back\n      </button>\n      {movieData && (\n        <>\n          <div className={s.moviePage}>\n            <img\n              src={\n                movieData.backdrop_path\n                  ? `https://image.tmdb.org/t/p/original${movieData.backdrop_path}`\n                  : 'https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png'\n              }\n              alt=\"\"\n              width={300}\n            />\n            <div className={s.movieInfoWrap}>\n              <h1>\n                {movieData.original_title}({movieData.release_date.slice(0, 4)})\n              </h1>\n              <p>UserScore: {movieData.vote_average * 10}%</p>\n              <h2>Overview</h2>\n              <p>{movieData.overview}</p>\n              <h3>Genres</h3>\n              <p>{movieData.genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </div>\n          {/* <div> */}\n          <div className={s.additionalInfo}>\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </li>\n\n              <li>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n          {/* </div> */}\n        </>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7a92417a5af1e8667d171d8c5ef3af4e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending() {\n  try {\n    const { data } = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesByKeyword(searchQuery) {\n  try {\n    const { data } = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: `${searchQuery}`,\n      },\n    });\n    return data.results; //returns an OBJECT. e.g.{page: 1, results: Array(20), total_pages: 8, total_results: 147}\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  //will throw an error if title \"undefined\";\n  try {\n    const { data } = await axios(`movie/${movieId}`, {\n      //for this to work make sure this.searchQuery type is number!!!\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const { data } = await axios(`movie/${movieId}/reviews`, {\n      //for this to work make sure this.searchQuery type is number!!!\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCast(movieId) {\n  try {\n    const { data } = await axios(`movie/${movieId}/credits`, {\n      //for this to work make sure this.searchQuery type is number!!!\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Cast","lazy","Reviews","MovieDetailsView","movieId","useParams","useState","movieData","setMovieData","navigate","useNavigate","useEffect","fetchMovieById","then","className","s","type","id","onClick","src","backdrop_path","alt","width","original_title","release_date","slice","vote_average","overview","genres","map","genre","name","join","to","Suspense","fallback","Loader","path","element","API_KEY","fetchTrending","axios","params","api_key","page","data","results","console","log","fetchMoviesByKeyword","searchQuery","query","fetchReviews","fetchCast"],"sourceRoot":""}