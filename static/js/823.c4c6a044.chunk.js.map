{"version":3,"file":"static/js/823.c4c6a044.chunk.js","mappings":"2TAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,GAAAA,CAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,KALP,uBAEKC,EAFL,EAEKA,KAFL,kBAQIA,EAAKC,SART,gCAUHC,QAAQC,IAAR,MAVG,gFAcA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,kGAEoBT,GAAAA,CAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTY,MAAM,GAAD,OAAKD,MALX,uBAEKL,EAFL,EAEKA,KAFL,kBAQIA,EAAKC,SART,gCAUHC,QAAQC,IAAR,MAVG,gFAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAGoBZ,GAAAA,CAAM,SAAD,OAAUY,GAAW,CAE/CX,OAAQ,CACNC,QAASJ,KANV,uBAGKM,EAHL,EAGKA,KAHL,kBASIA,GATJ,gCAWHE,QAAQC,IAAR,MAXG,gFAeA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,kGAEoBZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,YAA6B,CAEvDX,OAAQ,CACNC,QAASJ,KALV,uBAEKM,EAFL,EAEKA,KAFL,kBAQIA,GARJ,gCAUHE,QAAQC,IAAR,MAVG,gFAcA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,kGAEoBZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,YAA6B,CAEvDX,OAAQ,CACNC,QAASJ,KALV,uBAEKM,EAFL,EAEKA,KAFL,kBAQIA,GARJ,gCAUHE,QAAQC,IAAR,MAVG,gFA3DPP,IAAAA,SAAAA,QAAyB,iC,+ECuBzB,UArBA,WACE,OAA4Ce,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,MAAgBoB,KAAKF,KACpB,KAGD,wBACGD,GACCA,EAAeI,KAAI,SAAAC,GACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAA1B,SAAiCF,EAAMG,kBADhCH,EAAME","sources":["services/ServiceApi.js","views/TrendingView/TrendingView.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7a92417a5af1e8667d171d8c5ef3af4e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending() {\n  try {\n    const { data } = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesByKeyword(searchQuery) {\n  try {\n    const { data } = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: `${searchQuery}`,\n      },\n    });\n    return data.results; //returns an OBJECT. e.g.{page: 1, results: Array(20), total_pages: 8, total_results: 147}\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  //will throw an error if title \"undefined\";\n  try {\n    const { data } = await axios(`movie/${movieId}`, {\n      //for this to work make sure this.searchQuery type is number!!!\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviews(movieId) {\n  try {\n    const { data } = await axios(`movie/${movieId}/reviews`, {\n      //for this to work make sure this.searchQuery type is number!!!\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCast(movieId) {\n  try {\n    const { data } = await axios(`movie/${movieId}/credits`, {\n      //for this to work make sure this.searchQuery type is number!!!\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","// import { fetchTrending } from 'components/services/ServiceApi';\nimport { fetchTrending } from 'services/ServiceApi';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Trending() {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n\n  useEffect(() => {\n    fetchTrending().then(setTrendingMovies);\n  }, []);\n\n  return (\n    <ul>\n      {trendingMovies &&\n        trendingMovies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`movies/${movie.id}`}>{movie.original_title}</Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n\nexport default Trending;\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","page","data","results","console","log","fetchMoviesByKeyword","searchQuery","query","fetchMovieById","movieId","fetchReviews","fetchCast","useState","trendingMovies","setTrendingMovies","useEffect","then","map","movie","to","id","original_title"],"sourceRoot":""}