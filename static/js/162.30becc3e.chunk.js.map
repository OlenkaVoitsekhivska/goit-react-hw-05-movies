{"version":3,"file":"static/js/162.30becc3e.chunk.js","mappings":"2PASMA,GAAOC,EAAAA,EAAAA,OAAK,kBAAI,iCAChBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAI,gCAEV,SAASE,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeR,GAASS,KAAKL,KAC5B,CAACJ,IAMJ,OACE,iCACE,mBAAQU,KAAK,SAASC,GAAG,UAAUC,QANf,WACtBP,GAAU,IAKR,oBAGCF,IACC,iCACE,gBAEEU,IAAK,6CAAsCV,EAAUW,gBAAiB,EACtEC,IAAI,GACJC,MAAO,OAET,0BACGb,EAAUc,eADb,IAC8Bd,EAAUe,aAAaC,MAAM,EAAG,GAD9D,QAGA,uCAAwC,GAAzBhB,EAAUiB,aAAzB,QACA,sCACA,uBAAIjB,EAAUkB,YACd,oCACA,uBAAIlB,EAAUmB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,QACnD,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASC,GAAG,OAAZ,qBAGF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAW,SAAC,IAAD,IAArB,UACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACnC,EAAD,OAC5B,SAAC,KAAD,CAAOkC,KAAK,UAAUC,SAAS,SAACjC,EAAD,sB,yMC3DvCkC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAGoBC,GAAAA,CAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,KANP,uBAGKC,EAHL,EAGKA,KAHL,kBAUIA,EAAKC,SAVT,gCAYHC,QAAQC,IAAR,MAZG,gFAgBC,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,kGAEmBT,GAAAA,CAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTY,MAAM,GAAD,OAAKD,MALV,uBAEIL,EAFJ,EAEIA,KAFJ,kBAQGA,EAAKC,SARR,gCAUJC,QAAQC,IAAR,MAVI,gFAcD,SAAejC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BR,GAA9B,kGAGoBkC,GAAAA,CAAM,SAAD,OAAUlC,GAAW,CAE/CmC,OAAQ,CACNC,QAASJ,KANV,uBAGKM,EAHL,EAGKA,KAHL,kBAUIA,GAVJ,gCAYHE,QAAQC,IAAR,MAZG,gFAiBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7C,GAA5B,kGAEoBkC,GAAAA,CAAM,SAAD,OAAUlC,EAAV,YAA6B,CAErDmC,OAAQ,CACNC,QAASJ,KALZ,uBAEKM,EAFL,EAEKA,KAFL,kBASMA,GATN,gCAWDE,QAAQC,IAAR,MAXC,gFAeA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyB9C,GAAzB,kGAEwBkC,GAAAA,CAAM,SAAD,OAAUlC,EAAV,YAA6B,CAErDmC,OAAQ,CACNC,QAASJ,KALhB,uBAESM,EAFT,EAESA,KAFT,kBASUA,GATV,gCAWGE,QAAQC,IAAR,MAXH,gFAjEPP,IAAAA,SAAAA,QAAyB","sources":["components/MovieDetailsView/MovieDetailsView.jsx","components/ServiceApi/ServiceApi.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {  Routes, Route,useParams, useNavigate } from \"react-router-dom\";\nimport { fetchMovieById } from \"components/ServiceApi/ServiceApi\";\n// import Cast from \"components/Cast/Cast\";\n// import Reviews from \"components/Reviews/Reviews\";\nimport { lazy, Suspense } from 'react';\nimport Loader from \"components/Loader/Loader\";\n\nconst Cast = lazy(()=>import (\"components/Cast/Cast.jsx\"));\nconst Reviews = lazy(()=>import(\"components/Reviews/Reviews.jsx\"))\n\nexport default function MovieDetailsView() {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(setMovieData);\n  }, [movieId]);\n\n  const handleBackClick = () => {\n    navigate(-1);\n  };\n\n  return (\n    <>\n      <button type=\"button\" id=\"backBtn\" onClick={handleBackClick}>\n        return\n      </button>\n      {movieData && (\n        <>\n          <img\n            // src={`https://image.tmdb.org/t/p/original${movieData.backdrop_path}`}\n            src={`https://image.tmdb.org/t/p/original${movieData.backdrop_path}`||'https://image.shutterstock.com/image-vector/no-image-available-sign-internet-260nw-261719003.jpg'}\n            alt=\"\"\n            width={300}\n          />\n          <h1>\n            {movieData.original_title}({movieData.release_date.slice(0, 4)})\n          </h1>\n          <p>UserScore: {movieData.vote_average * 10}%</p>\n          <h2>Overview</h2>\n          <p>{movieData.overview}</p>\n          <h3>Genres</h3>\n          <p>{movieData.genres.map(genre => genre.name).join(',')}</p>\n          <div>\n            <h2>Additional information</h2>\n            <ul>\n              <li>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </li>\n\n              <li>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n              </li>\n            </ul>\n            <Suspense fallback ={<Loader />}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}","import axios from 'axios';\nconst API_KEY = '7a92417a5af1e8667d171d8c5ef3af4e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport async function fetchTrending() {\n  try {\n\n    const { data } = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n export async function fetchMoviesByKeyword(searchQuery) {\n  try {\n    const { data } = await axios('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: `${searchQuery}`,\n      },\n    });\n    return data.results; //returns an OBJECT. e.g.{page: 1, results: Array(20), total_pages: 8, total_results: 147}\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieById(movieId) {\n  //will throw an error if title \"undefined\";\n  try {\n    const { data } = await axios(`movie/${movieId}`, {\n      //for this to work make sure this.searchQuery type is number!!!\n      params: {\n        api_key: API_KEY,\n      \n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nexport async function fetchReviews(movieId){\n    try{\n    const { data } = await axios(`movie/${movieId}/reviews`, {\n        //for this to work make sure this.searchQuery type is number!!!\n        params: {\n          api_key: API_KEY,\n        \n        },\n      });\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n}\n\nexport async function fetchCast(movieId){\n    try{\n        const { data } = await axios(`movie/${movieId}/credits`, {\n            //for this to work make sure this.searchQuery type is number!!!\n            params: {\n              api_key: API_KEY,\n            \n            },\n          });\n          return data;\n        } catch (error) {\n          console.log(error);\n        }\n}\n\n"],"names":["Cast","lazy","Reviews","MovieDetailsView","movieId","useParams","useState","movieData","setMovieData","navigate","useNavigate","useEffect","fetchMovieById","then","type","id","onClick","src","backdrop_path","alt","width","original_title","release_date","slice","vote_average","overview","genres","map","genre","name","join","to","Suspense","fallback","path","element","API_KEY","fetchTrending","axios","params","api_key","page","data","results","console","log","fetchMoviesByKeyword","searchQuery","query","fetchReviews","fetchCast"],"sourceRoot":""}